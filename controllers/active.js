// Generated by CoffeeScript 1.7.1
var active, fs, helper, path, url, user;

fs = require('fs');

path = require('path');

url = require('url');

helper = require('../lib/helper');

user = require('../model/user');

active = require('../model/active');

exports.before = function(req, res, next) {};

exports.joina = function(req, res, next) {
  var aid, check, data, re, uid;
  re = new helper.recode();
  data = {};
  data.username = req.body.username;
  data.mobile = req.body.mobile;
  data.email = req.body.email;
  data.province = req.body.prolander;
  data.city = req.body.city;
  data.dealer = req.body.dealer;
  data.sex = req.body.sex;
  data.buytime = req.body.buytime;
  data.cartype = req.body.cartype;
  data.hascar = req.body.hascar;
  data.passport = req.body.passport;
  data.create_at = new Date();
  if (data.username == null) {
    re.recode = 201;
    re.reason = "用户名不能为空";
  }
  if (data.mobile == null) {
    re.recode = 202;
    re.reason = "手机号码不能为空";
  }
  if (data.mobile.length !== 11) {
    re.recode = 203;
    re.reason = "手机号码格式不正确";
  }
  check = /^[1][3-8]\d{9}$/;
  if (!check.test(data.mobile)) {
    re.recode = 204;
    re.reason = "请验证手机号码格式";
  }
  aid = req.params.active_id;
  console.log(data);
  if (re.recode !== 200) {
    return res.send(re);
  }
  uid = req.body.uid;
  if (uid != null) {
    active.checkac(aid, uid, function(err, resu) {
      if (resu.length > 0) {
        re.recode = 301;
        re.reason = "您已经参与过此活动了";
        return res.send(re);
      } else {
        return active.joinactive(aid, uid, data, function(err, results) {
          console.log("u:", err, results);
          return res.send(re);
        });
      }
    });
    return '';
  } else {
    return active.checkmobile(aid, data.mobile, function(err, u) {
      if (u.length > 0) {
        re.recode = 301;
        re.reason = "您已经参与过此活动了";
        return res.send(re);
      } else {
        return active.joinactivenou(aid, data, function(err, results) {
          console.log("a:", err, results);
          return res.send(re);
        });
      }
    });
  }
};

exports.homepage = function(req, res, next) {
  return res.render('active-info');
};

exports.active = function(req, res, next) {
  res.locals.men_home = "active";
  return active.getactive(req.params.active_id, function(err, results) {
    res.render('active-info', {
      active: results[0]
    });
    return active.viewed(req.params.active_id);
  });
};

exports["new"] = function(req, res, next) {
  return res.render('active-up');
};

exports.newpost = function(req, res, next) {
  var re;
  re = new helper.recode();
  return res.send(re);
};

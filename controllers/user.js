// Generated by CoffeeScript 1.7.1
var EventProxy, active, fs, helper, path, url, user;

fs = require('fs');

path = require('path');

url = require('url');

helper = require("../lib/helper");

EventProxy = require('eventproxy');

user = require('../model/user');

active = require('../model/active');

exports.before = function(req, res, next) {
  if ((req.cookies.user != null) && (res.locals.userid != null) && req.cookies.user !== "") {
    res.locals.men_user = "active";
    return next();
  } else {
    return res.redirect('/sign/in');
  }
};

exports.api = function(req, res, next) {
  var re;
  re = new helper.recode();
  if (res.locals.userid != null) {
    return user.getUser(res.locals.userid, function(err, results) {
      re = results[0];
      re.password = "";
      return res.send(re);
    });
  } else {
    return res.send(re);
  }
};

exports.lots = function(req, res, next) {
  var ep;
  ep = EventProxy.create('limits', "user", function(limits, user) {
    return res.render('sign-lots', {
      user: user,
      limits: limits
    });
  });
  user.getUser(res.locals.userid, function(err, results) {
    return ep.emit("user", results[0]);
  });
  return active.limits(res.locals.userid, function(err, results) {
    console.log(err, results);
    return ep.emit("limits", results);
  });
};

exports.regs = function(req, res, next) {
  var ep;
  ep = EventProxy.create("active", "user", function(active, user) {
    return res.render('sign-regs', {
      user: user,
      active: active
    });
  });
  user.getUser(res.locals.userid, function(err, results) {
    return ep.emit("user", results[0]);
  });
  return user.getUserActive(res.locals.userid, function(err, results) {
    return ep.emit("active", results);
  });
};

exports.info = function(req, res, next) {
  return user.getUser(res.locals.userid, function(err, results) {
    return res.render('sign-info', {
      user: results[0]
    });
  });
};

exports.cars = function(req, res, next) {
  return user.getUser(res.locals.userid, function(err, results) {
    return res.render('sign-cars', {
      user: results[0]
    });
  });
};

exports.carspost = function(req, res, next) {
  var data, re;
  data = {};
  data.create_at = new Date();
  data.uid = res.locals.userid;
  data.content = req.body.content;
  re = new helper.recode();
  return user.newcars(data, function(err, results) {});
};

exports.infopost = function(req, res, next) {
  var data, re;
  re = new helper.recode();
  data = {};
  data.truename = req.body.truename;
  data.sex = req.body.sex === "1" ? "男" : "女";
  data.adr = req.body.adr;
  data.province = req.body.province;
  data.city = req.body.city;
  console.log(req.body, data);
  return user.updateUserInfo(res.locals.userid, data, function(err, results) {
    console.log(err, results);
    return res.redirect("/user/info");
  });
};

exports.center = function(req, res, next) {
  console.log("用户中心id:", res.locals.userid);
  return user.getUser(res.locals.userid, function(err, results) {
    return res.render('sign-center', {
      user: results[0]
    });
  });
};

// Generated by CoffeeScript 1.7.1
var EventProxy, Showdown, active, converter, fs, helper, path, url, user;

fs = require('fs');

path = require('path');

url = require('url');

EventProxy = require('eventproxy');

helper = require("../lib/helper");

active = require("../model/active");

user = require("../model/user");

Showdown = require('showdown');

converter = new Showdown.converter();

exports.before = function(req, res, next) {};

exports.art = function(req, res, next) {
  res.locals.men_reco = "active";
  return active.getArt(req.params.art_id, function(err, results) {
    var art;
    art = results[0];
    art.content = converter.makeHtml(art.content);
    return res.render('art', {
      art: results[0]
    });
  });
};

exports.limitinfo = function(req, res, next) {
  var ep;
  res.locals.men_home = "active";
  ep = EventProxy.create("banner", "limit", "user", function(banner, limit, user) {
    return res.render('home-limit-info', {
      banner: banner,
      limit: limit,
      user: user
    });
  });
  if (res.locals.userid != null) {
    user.getUser(res.locals.userid, function(err, results) {
      return ep.emit("user", results[0]);
    });
  } else {
    ep.emit("user", null);
  }
  active.getLimit(function(err, results) {
    return ep.emit("limit", results[0]);
  });
  return active.getBanner(function(err, results) {
    return ep.emit("banner", results);
  });
};

exports.limit = function(req, res, next) {
  var ep;
  res.locals.men_home = "active";
  ep = EventProxy.create("banner", "limit", "user", function(banner, limit, user) {
    return res.render('home-limit', {
      banner: banner,
      limit: limit,
      user: user
    });
  });
  if (res.locals.userid != null) {
    user.getUser(res.locals.userid, function(err, results) {
      return ep.emit("user", results[0]);
    });
  } else {
    ep.emit("user", null);
  }
  active.getLimit(function(err, results) {
    return ep.emit("limit", results[0]);
  });
  return active.getBanner(function(err, results) {
    return ep.emit("banner", results);
  });
};

exports.limitpost = function(req, res, next) {
  var data, re;
  re = new helper.recode();
  data = {};
  data.lid = req.params.limit_id;
  data.truename = req.body.username;
  data.mobile = req.body.mobile;
  data.province = req.body.province;
  data.city = req.body.city;
  data.create_at = new Date();
  if (req.body.userid != null) {
    data.uid = req.body.userid;
  }
  if (data.lid == null) {
    re.recode = 201;
    re.reason = "活动不存在";
  }
  if (data.truename == null) {
    re.recode = 202;
    re.reason = "用户名不能为空";
  }
  if (data.mobile == null) {
    re.recode = 203;
    re.reason = "手机号码不能为空";
  }
  if (re.recode !== 200) {
    return res.send(re);
  }
  if ((data.lid != null) && (data.uid != null)) {
    return active.checklimit(data.lid, data.uid, function(err, results) {
      if (results.length > 0) {
        return res.send(re);
      } else {
        return active.newlimit(data, function(err, results) {
          return res.send(re);
        });
      }
    });
  } else {
    return active.newlimit(data, function(err, results) {
      return res.send(re);
    });
  }
};

exports.homepage = function(req, res, next) {
  var ep;
  res.locals.men_home = "active";
  ep = EventProxy.create("banner", "active", "users", function(banner, active, users) {
    return res.render('homepage', {
      banner: banner,
      active: active,
      users: users
    });
  });
  active.getActives(function(err, results) {
    return ep.emit("active", results);
  });
  active.getUsers('note', function(err, users) {
    var a, reg, _i, _len;
    if (users != null) {
      for (_i = 0, _len = users.length; _i < _len; _i++) {
        a = users[_i];
        a.newtime = helper.format_date(new Date(a.create_at), true);
        reg = /(\d{3})\d{4}(\d{4})/;
        a.mobile = a.mobile.replace(reg, "$1****$2");
      }
      return ep.emit("users", users);
    } else {
      return ep.emit("users", []);
    }
  });
  return active.getBanner(function(err, results) {
    return ep.emit("banner", results);
  });
};

exports.active = function(req, res, next) {};

exports.recommend = function(req, res, next) {
  var ep;
  res.locals.men_reco = "active";
  ep = EventProxy.create("banner", "art", function(banner, art) {
    return res.render('recommend', {
      banner: banner,
      art: art
    });
  });
  active.getArts(function(err, results) {
    return ep.emit("art", results);
  });
  return active.getBannertj(function(err, results) {
    return ep.emit("banner", results);
  });
};
